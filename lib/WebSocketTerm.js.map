{"version":3,"sources":["../src/WebSocketTerm.jsx"],"names":["WebSocketTerm","props","socket","term","url","splitWrite","onlyRead","beforeSendData","beforeWriteData","refs","rcterm","WebSocket","forEach","write","v","onerror","e","console","error","onopen","log","send","on","data","onmessage","split","length","onclose","warn","close","termProps","width","height","overflow","propTypes","string","isRequired","bool","arrayOf","object"],"mappings":"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","file":"WebSocketTerm.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport RcTerm from './RcTerm';\n\nclass WebSocketTerm extends Component {\n    constructor(props) {\n        super(props);\n        this.socket = null;\n        this.term = null;\n    }\n\n    componentDidMount() {\n        const { url, splitWrite = false, onlyRead = false, beforeSendData = [], beforeWriteData = [] } = this.props;\n        this.term = this.refs.rcterm.term;\n        this.socket = new WebSocket(url);\n        beforeWriteData.forEach(v => this.term.write(v))\n        this.socket.onerror = (e) => {\n            console.error('socket连接失败！');\n        };\n        this.socket.onopen = (e) => {\n            console.log('socket连接成功！')\n            beforeSendData.forEach(v => this.socket.send(v))\n            !onlyRead && this.term.on('data', (data) => {\n                this.socket.send(data);\n            });\n        };\n        this.socket.onmessage = (e) => {\n            if (splitWrite) {\n                const data = e.data.split('\\n');\n                if (data[data.length - 1] === \"\") {\n                    delete data[data.length - 1];\n                }\n                data.forEach(v => this.term.write(`${v}\\n\\r`));\n            } else {\n                this.term.write(e.data)\n            }\n        }\n        this.socket.onclose = (error) => {\n            console.warn('socket断开连接！')\n        }\n    }\n\n    componentWillUnmount() {\n        this.socket.close();\n    }\n\n    render() {\n        const { termProps } = this.props;\n        return (\n            <div style={{ width: '100%', height: '100%', overflow: 'hidden' }}>\n                <RcTerm ref=\"rcterm\" {...termProps}></RcTerm>\n            </div >\n        )\n    }\n}\n\nWebSocketTerm.propTypes = {\n    url: PropTypes.string.isRequired,\n    splitWrite: PropTypes.bool,\n    onlyRead: PropTypes.bool,\n    beforeSendData: PropTypes.arrayOf(PropTypes.string),\n    beforeWriteData: PropTypes.arrayOf(PropTypes.string),\n    termProps: PropTypes.object,\n}\n\nexport default WebSocketTerm;"]}